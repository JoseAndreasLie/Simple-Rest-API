{
	"info": {
		"_postman_id": "d99655a2-61a1-42d5-ac39-7a24ad767a36",
		"name": "ðŸš€ SIMPLE REST API PROJECT",
		"description": "## Concise Take Home Test\n\nName: Jose Andreas Lie",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "39785451"
	},
	"item": [
		{
			"name": "USERS TABLE",
			"item": [
				{
					"name": "Create User Data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Lisa White\",\n    \"email\": \"lisa@gmail.com\",\n    \"phoneNumber\": \"082111111115\",\n    \"address\": \"California\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/api/users",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"users"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				},
				{
					"name": "Update User Data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"Jose Andreas Lie\",\n    \"phoneNumber\": \"085156119134\",\n    \"address\": \"Rumah Jose\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/api/users/:id",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "3"
								}
							]
						},
						"description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
					},
					"response": []
				},
				{
					"name": "Get All Users Data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:3000/api/users",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"users"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Get Specify User by Id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:3000/api/users/:id",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete User by Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/api/users/:id",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "1"
								}
							]
						},
						"description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
					},
					"response": []
				}
			]
		},
		{
			"name": "GROUPS TABLE",
			"item": [
				{
					"name": "Create Group Data",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Charlielie\",\r\n    \"description\": \"Group 3\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/api/groups",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"groups"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Group Data",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Arnanda V2\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/api/groups/:id",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"groups",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Group by Id",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "localhost:3000/api/groups/:id",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"groups",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "3"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Groups Data",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:3000/api/groups",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"groups"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Specify Group by Id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:3000/api/groups/:id",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"groups",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Assign User to a Group",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userId\" : 5,\r\n    \"groupId\" : 3\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/api/groups/assign",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"groups",
								"assign"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "TASKS TABLE",
			"item": [
				{
					"name": "Create Task with User",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Finish Backend Development\",\r\n  \"deadline\": \"2024-12-31\",\r\n  \"userId\": 2\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/api/tasks",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Task Data",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Update API Documentation\",\r\n    \"deadline\": \"2024-12-30\",\r\n    \"userId\": 3\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/api/tasks/:id",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"tasks",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Task",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "localhost:3000/api/tasks/:id",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"tasks",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Data by User Id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:3000/api/tasks/:id",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"tasks",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Tasks Data",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:3000/api/tasks",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"tasks"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "id",
			"value": "1"
		},
		{
			"key": "base_url",
			"value": "https://postman-rest-api-learner.glitch.me/"
		}
	]
}